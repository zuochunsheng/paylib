apply plugin: 'maven'
apply plugin: 'signing'
configurations { deployerJars }
repositories {
    maven{ url"https://maven.google.com"}
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    google()
}

// 判断版本是Release or Snapshots
def isReleaseBuild() {
    return !MAVEN_VERSION.contains("SNAPSHOT");
}
// 获取仓库url
def getRepositoryUrl() {
    return isReleaseBuild() ? MAVEN_RELEASE_URL : MAVEN_SNAPSHOT_URL;
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            pom.project {
                version MAVEN_VERSION
                groupId MAVEN_GROUP_ID
                artifactId MAVEN_ARTIFACT_ID
                packaging MAVEN_PACKAGING
                description MAVEN_DESCRIPTION
                name MAVEN_NAME
                url MAVEN_URL
                inceptionYear MAVEN_INCEPTION_YEAR

                scm {
                    tag POM_TAG
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }
                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                        // comments POM_LICENCE_COMMENTS
                    }
                }

                developers {
                    developer {
                        //id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                        email POM_DEVELOPER_EMAIL
                        //organization "paylibrary"
                        url POM_DEVELOPER_URL
                    }
                }
            }

            repository(url: getRepositoryUrl()) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }
        }
    }
}
// 进行数字签名
signing { // 当 发布版本 & 存在"uploadArchives"任务时，才执行
//    required {
//        isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives")
//    }
    sign configurations.archives
}
